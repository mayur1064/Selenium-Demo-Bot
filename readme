@Configuration
public class SecurityConfig {

    // UI: OAuth2 login
    @Bean
    @Order(1)
    public SecurityFilterChain uiFilterChain(HttpSecurity http) throws Exception {
        http
            .securityMatcher("/**")
            .authorizeHttpRequests(authz -> authz
                .requestMatchers("/assets/**", "/login", "/oauth2/**").permitAll()
                .anyRequest().authenticated()
            )
            .oauth2Login()
            .and()
            .csrf().ignoringRequestMatchers("/instances/**", "/actuator/**");

        return http.build();
    }

    // Client: Basic Auth for registration
    @Bean
    @Order(2)
    public SecurityFilterChain clientFilterChain(HttpSecurity http) throws Exception {
        http
            .securityMatcher("/instances/**", "/actuator/**")
            .authorizeHttpRequests(authz -> authz
                .anyRequest().authenticated()
            )
            .httpBasic()
            .and()
            .csrf().disable();

        return http.build();
    }

    @Bean
    public UserDetailsService userDetailsService() {
        return new InMemoryUserDetailsManager(
            User.withUsername("client")
                .password("{noop}clientpass")
                .roles("CLIENT")
                .build()
        );
    }
}
