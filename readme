import org.springframework.boot.CommandLineRunner;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.io.File;
import java.nio.file.Paths;
import java.security.KeyStore;

@Configuration
public class KeystoreLogger {

    @Bean
    public CommandLineRunner logKeystoreInfo() {
        return args -> {
            System.out.println("==== Checking System Properties for SSL Keystore ====");
            logSystemProperty("javax.net.ssl.keyStore");
            logSystemProperty("javax.net.ssl.keyStorePassword");
            logSystemProperty("javax.net.ssl.keyStoreType");

            // Optional: If you want to validate the keystore exists
            String keystorePath = System.getProperty("javax.net.ssl.keyStore");
            if (keystorePath != null) {
                File keystoreFile = Paths.get(keystorePath).toFile();
                if (keystoreFile.exists()) {
                    System.out.println("Keystore file exists: " + keystoreFile.getAbsolutePath());
                    printKeystoreDetails(keystoreFile, System.getProperty("javax.net.ssl.keyStorePassword"));
                } else {
                    System.out.println("Keystore file not found: " + keystoreFile.getAbsolutePath());
                }
            } else {
                System.out.println("No javax.net.ssl.keyStore property set.");
            }
        };
    }

    private void logSystemProperty(String property) {
        System.out.println(property + ": " + System.getProperty(property));
    }

    private void printKeystoreDetails(File keystoreFile, String password) {
        try {
            KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
            try (var fis = new java.io.FileInputStream(keystoreFile)) {
                keyStore.load(fis, (password != null ? password.toCharArray() : null));
                System.out.println("Keystore Type: " + keyStore.getType());
                System.out.println("Keystore contains " + keyStore.size() + " entries.");
            }
        } catch (Exception e) {
            System.err.println("Failed to load keystore: " + e.getMessage());
        }
    }
}

Paid By	Expense	Amount	Shared by		
Manoj	Fish	3600	All		
Sekhar 	Room Fare	4900	All		
Dilip	CAB	835	Dilip Mayur Yogesh Vishal Sekhar 		
Dilip	CAB	270	Dilip Mayur		
Dilip	Wine	1600	Dilip Manoj		
Sushant	CNG	1185	All		
Sushant	Breakfast	440	All		
