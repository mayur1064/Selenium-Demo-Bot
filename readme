import org.springframework.http.*;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;
import org.apache.http.impl.client.BasicCookieStore;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.client.CookieStore;
import org.apache.http.client.config.CookieSpecs;
import org.apache.http.client.config.RequestConfig;

public class ActuatorRestartCaller {

    public static void main(String[] args) {
        String baseUrl = "http://localhost:8080";
        String username = "yourUsername";
        String password = "yourPassword";

        CookieStore cookieStore = new BasicCookieStore();
        RequestConfig globalConfig = RequestConfig.custom()
                .setCookieSpec(CookieSpecs.STANDARD).build();
        CloseableHttpClient httpClient = HttpClients.custom()
                .setDefaultRequestConfig(globalConfig)
                .setDefaultCookieStore(cookieStore)
                .build();

        HttpComponentsClientHttpRequestFactory factory =
                new HttpComponentsClientHttpRequestFactory(httpClient);
        RestTemplate restTemplate = new RestTemplate(factory);

        // Step 1: Perform login
        MultiValueMap<String, String> loginParams = new LinkedMultiValueMap<>();
        loginParams.add("username", username);
        loginParams.add("password", password);
        HttpHeaders loginHeaders = new HttpHeaders();
        loginHeaders.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
        HttpEntity<MultiValueMap<String, String>> loginRequest = new HttpEntity<>(loginParams, loginHeaders);

        try {
            restTemplate.postForEntity(baseUrl + "/login", loginRequest, String.class);
        } catch (HttpClientErrorException e) {
            System.out.println("Login failed: " + e.getMessage());
            return;
        }

        // Step 2: Get CSRF token (from cookie or response)
        String csrfToken = cookieStore.getCookies().stream()
                .filter(c -> "XSRF-TOKEN".equals(c.getName()))
                .findFirst()
                .map(c -> c.getValue())
                .orElse(null);

        if (csrfToken == null) {
            System.out.println("CSRF token not found.");
            return;
        }

        // Step 3: Call /actuator/restart with CSRF token and session cookie
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);
        headers.set("X-XSRF-TOKEN", csrfToken);  // Send CSRF token in header

        HttpEntity<Void> restartRequest = new HttpEntity<>(headers);

        try {
            ResponseEntity<String> response = restTemplate.postForEntity(baseUrl + "/actuator/restart", restartRequest, String.class);
            System.out.println("Restart response: " + response.getStatusCode());
        } catch (HttpClientErrorException e) {
            System.out.println("Restart failed: " + e.getStatusCode() + " - " + e.getResponseBodyAsString());
        }
    }
}
