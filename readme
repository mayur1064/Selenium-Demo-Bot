import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.oauth2.core.oidc.user.OidcUser;

import java.util.Set;

@Configuration
public class SecurityConfig {

    private static final Set<String> ALLOWED_USERNAMES = Set.of(
            "user1@yourdomain.com",
            "user2@yourdomain.com"
    );

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
            .authorizeHttpRequests(authorize -> authorize
                .requestMatchers("/assets/**", "/login").permitAll()
                .anyRequest().access((authentication, context) -> {
                    var principal = (OidcUser) authentication.get().getPrincipal();
                    String username = principal.getEmail(); // or principal.getPreferredUsername()
                    if (ALLOWED_USERNAMES.contains(username)) {
                        return context.grant();
                    } else {
                        return context.deny();
                    }
                })
            )
            .oauth2Login()
            .and()
            .logout().logoutSuccessUrl("/");
        return http.build();
    }
}
